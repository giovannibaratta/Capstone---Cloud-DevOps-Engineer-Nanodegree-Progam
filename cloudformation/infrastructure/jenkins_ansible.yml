Parameters:

    ProjectName:
        Description: The name of the project
        Type: String

    InstanceType:
        Description: Instance type to launch in the autoscaling group
        Type: String
        Default: t2.micro

Resources:

    ######################
    ##### INSTANCES ######
    ######################

    ansibleController:
        Type: AWS::EC2::Instance
        Properties: 
            ImageId: ami-0083662ba17882949 # CentOs 7
            InstanceType: t2.micro
            KeyName: ansible_controller
            SecurityGroupIds: 
                - !GetAtt ansibleControllerSecurityGroup.GroupId
            SubnetId:
                Fn::ImportValue: 
                    Fn::Sub: "${ProjectName}-publicSubnet1Id"
            Tags: 
                - Key: ProjectName
                  Value: !Sub ${ProjectName}
                - Key: Name
                  Value: AnsibleController

    jenkinsNode:
        Type: AWS::EC2::Instance
        Properties: 
            ImageId: ami-085925f297f89fce1 # Ubuntu 18.04 server
            InstanceType: t2.micro
            KeyName: jenkins_node
            SecurityGroupIds: 
                - !GetAtt jenkinsSecurityGroup.GroupId
            SubnetId:
                Fn::ImportValue: 
                    Fn::Sub: "${ProjectName}-publicSubnet1Id"
            Tags: 
                - Key: ProjectName
                  Value: !Sub ${ProjectName}
                - Key: Name
                  Value: JenkinsNode


    ######################
    ######## ROLES #######
    ######################

    ######################
    ## SECURITY GROUPS ###
    ######################

    ansibleControllerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName: Ansible controller security group
            GroupDescription: Enable ingress/egress connection for ansible controller
            SecurityGroupIngress: 
                -   CidrIp: 0.0.0.0/0
                    Description: Enable global IN SSH
                    FromPort: 22
                    IpProtocol: tcp
                    ToPort: 22
            
            SecurityGroupEgress: 
                -   CidrIp: 
                        Fn::ImportValue:
                            Fn::Sub: "${ProjectName}-vpcCidrBlock"
                    Description: Enable local OUT SSH
                    FromPort: 22
                    IpProtocol: tcp
                    ToPort: 22

                -   CidrIp: 0.0.0.0/0
                    Description: Enable global HTTP for update
                    FromPort: 80
                    IpProtocol: tcp
                    ToPort: 80

                -   CidrIp: 0.0.0.0/0
                    Description: Enable global HTTPS for update
                    FromPort: 443
                    IpProtocol: tcp
                    ToPort: 443
            Tags: 
                - Key: ProjectName
                  Value: !Sub ${ProjectName}
            VpcId: 
                Fn::ImportValue: 
                    Fn::Sub: "${ProjectName}-vpcId"

    jenkinsSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName: Jenkins node security group
            GroupDescription: Enable ingress/egress connection for jenkins node
            SecurityGroupIngress: 
                -   CidrIp: 0.0.0.0/0
                    Description: Enable global IN SSH
                    FromPort: 22
                    IpProtocol: tcp
                    ToPort: 22

                -   CidrIp: 0.0.0.0/0
                    Description: Enable global IN HTTP
                    FromPort: 8080
                    IpProtocol: tcp
                    ToPort: 8080
            
            SecurityGroupEgress: 
                -   CidrIp: 0.0.0.0/0
                    Description: Enable global HTTP for update
                    FromPort: 80
                    IpProtocol: tcp
                    ToPort: 80

                -   CidrIp: 0.0.0.0/0
                    Description: Enable global HTTPS for update
                    FromPort: 443
                    IpProtocol: tcp
                    ToPort: 443
            Tags: 
                - Key: ProjectName
                  Value: !Sub ${ProjectName}
            VpcId: 
                Fn::ImportValue: 
                    Fn::Sub: "${ProjectName}-vpcId"

###############
### OUTPUS ####
###############

Outputs:
    ansibleControllerDns:
        Description: Ansible controller DNS
        Value: !GetAtt ansibleController.PublicDnsName
        Export:
            Name: !Sub ${ProjectName}-ansibleControllerDns
    
    jenkinsNodeDns:
        Description: Jenkins controller DNS
        Value: !GetAtt jenkinsNode.PublicDnsName
        Export:
            Name: !Sub ${ProjectName}-jenkinsNodeDns