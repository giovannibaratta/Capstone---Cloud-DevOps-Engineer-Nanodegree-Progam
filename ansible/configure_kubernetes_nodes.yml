---
- hosts: all
  become: true
  name: "Init k8s nodes"
  gather_facts: false
  vars:
    device_path: "/dev/xvdb"
    mounting_point: "/more_space"
    file_system_type: "ext4"

  tasks:

    - name: Wait for ssh connection
      wait_for_connection:
        delay: 30
        timeout: 300
        sleep: 5

    - name: "Make file system"
      filesystem:
        fstype: ext4
        dev: "{{ device_path }}"

    - name: "Mount extra drive"
      mount:
        state: mounted
        fstype: "{{ file_system_type }}"
        path: "{{ mounting_point }}"
        src: "{{ device_path }}"

    - name: "Update apt"
      apt:
        update-cache: true

    - name: "Install MicroK8s"
      snap:
        name: microk8s
        state: present
        classic: true

    - name: "Add ubuntu user to microk8s group"
      user:
        name: ubuntu
        state: present
        groups:
          - microk8s
        append: true

    # - name: "Set permission on ~/.kube"
    #   file:
    #     path: '~/.kube'
    #     state: directory
    #     owner: ubuntu
    #     group: ubuntu
    
    - name: Reset ssh connection to allow user changes to affect 'current login user'
      meta: reset_connection
    
    - name: "Restart microk8s server"
      shell:
        cmd: |
          /snap/bin/microk8s stop
          /snap/bin/microk8s start
      changed_when: false

- hosts: k8s_manager
  become: false
  name: "Create cluster on manager node"
  gather_facts: false
  tasks:

    - name: Wait for port 25000 to become open on the host, don't start checking for 10 seconds
      wait_for:
        port: 25000
        delay: 5

    - name: "Start cluster on manager"
      shell:
        cmd: >
            /snap/bin/microk8s add-node
            | grep "Join node with"
            | cut -d' ' -f6
      changed_when: false
      register: k8s_manager_add_node

    - name: "Print join string"
      debug:
        msg: "Join string -> {{ k8s_manager_add_node.stdout }}"

    - name: "Distribute join string"
      set_fact:
        join_string: "{{ k8s_manager_add_node.stdout }}"

    - name: "Print join string"
      debug:
        var: join_string

- hosts: k8s_worker
  name: "Join cluster from worker node"
  gather_facts: false
  become: false
  tasks:
    - name: "Print join string from worker"
      debug:
        msg: "Join string -> {{ hostvars[groups['k8s_manager'][0]]['join_string'] }}"

    - name: "Join cluster"
      shell:
        cmd: "/snap/bin/microk8s join {{ hostvars[groups['k8s_manager'][0]]['join_string'] }}"
      changed_when: false

- hosts: k8s_manager
  become: false
  name: "Deploy web service"
  gather_facts: false
  vars:
    - copy_dir: "/tmp"

  tasks:

    - name: "Copy deployment file"
      copy:
        src: files/k8s_deployment.yml
        dest: "{{ copy_dir }}/k8s_deployment.yml"

    - name: "Copy service file"
      copy:
        src: files/k8s_service.yml
        dest: "{{ copy_dir }}/k8s_service.yml"

    - name: "Create deployment"
      shell:
        cmd: "/snap/bin/microk8s kubectl apply -f {{ copy_dir }}/k8s_deployment.yml"
    
    - name: "Expose service"
      shell:
        cmd: "/snap/bin/microk8s kubectl apply -f {{ copy_dir }}/k8s_service.yml"

- hosts: localhost
  connection: local
  become: false
  gather_facts: false

  tasks:
    - name: "Write route 53 "
      route53:
        alias: true
        alias_hosted_zone_id: "{{ loadBalancerZoneId }}"
        hosted_zone_id: Z096422239STUVXJ2R3ML
        overwrite: true
        private_zone: no
        record: "giovannibaratta.digital"
        retry_interval: 180
        state: present
        type: A
        value: "{{ loadBalancerDns }}"
        wait: true
        wait_timeout: 180    
